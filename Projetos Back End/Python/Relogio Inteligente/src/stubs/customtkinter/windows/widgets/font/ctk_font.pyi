from ..theme import ThemeManager as ThemeManager
from tkinter.font import Font
from typing import Callable
from typing_extensions import Literal

class CTkFont(Font):
    def __init__(self, family: str | None = None, size: int | None = None, weight: Literal['normal', 'bold'] = None, slant: Literal['italic', 'roman'] = 'roman', underline: bool = False, overstrike: bool = False) -> None: ...
    def add_size_configure_callback(self, callback: Callable): ...
    def remove_size_configure_callback(self, callback: Callable): ...
    def create_scaled_tuple(self, font_scaling: float) -> tuple[str, int, str]: ...
    def config(self, *args, **kwargs) -> None: ...
    def configure(self, **kwargs) -> None: ...
    def cget(self, attribute_name: str) -> any: ...
    def copy(self) -> CTkFont: ...
