from _typeshed import Incomplete
from typing import Callable

class ScalingTracker:
    deactivate_automatic_dpi_awareness: bool
    window_widgets_dict: Incomplete
    window_dpi_scaling_dict: Incomplete
    widget_scaling: int
    window_scaling: int
    update_loop_running: bool
    update_loop_interval: int
    loop_pause_after_new_scaling: int
    @classmethod
    def get_widget_scaling(cls, widget) -> float: ...
    @classmethod
    def get_window_scaling(cls, window) -> float: ...
    @classmethod
    def set_widget_scaling(cls, widget_scaling_factor: float): ...
    @classmethod
    def set_window_scaling(cls, window_scaling_factor: float): ...
    @classmethod
    def get_window_root_of_widget(cls, widget): ...
    @classmethod
    def update_scaling_callbacks_all(cls) -> None: ...
    @classmethod
    def update_scaling_callbacks_for_window(cls, window) -> None: ...
    @classmethod
    def add_widget(cls, widget_callback: Callable, widget): ...
    @classmethod
    def remove_widget(cls, widget_callback, widget) -> None: ...
    @classmethod
    def remove_window(cls, window_callback, window) -> None: ...
    @classmethod
    def add_window(cls, window_callback, window) -> None: ...
    @classmethod
    def activate_high_dpi_awareness(cls) -> None: ...
    @classmethod
    def get_window_dpi_scaling(cls, window) -> float: ...
    @classmethod
    def check_dpi_scaling(cls) -> None: ...
