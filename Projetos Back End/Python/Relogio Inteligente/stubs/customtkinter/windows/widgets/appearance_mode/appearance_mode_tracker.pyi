from _typeshed import Incomplete
from typing import Callable

class AppearanceModeTracker:
    callback_list: Incomplete
    app_list: Incomplete
    update_loop_running: bool
    update_loop_interval: int
    appearance_mode_set_by: str
    appearance_mode: int
    @classmethod
    def init_appearance_mode(cls) -> None: ...
    @classmethod
    def add(cls, callback: Callable, widget=None): ...
    @classmethod
    def remove(cls, callback: Callable): ...
    @staticmethod
    def detect_appearance_mode() -> int: ...
    @classmethod
    def get_tk_root_of_widget(cls, widget): ...
    @classmethod
    def update_callbacks(cls) -> None: ...
    @classmethod
    def update(cls) -> None: ...
    @classmethod
    def get_mode(cls) -> int: ...
    @classmethod
    def set_appearance_mode(cls, mode_string: str): ...
